services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./config/prometheus/alerts:/etc/prometheus/alerts
      - prometheus-data:/prometheus
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    restart: unless-stopped
    ports:
      - "9090:9090" # Optional: remove for internal access only
    networks:
      - traefik

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana-data:/var/lib/grafana
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`grafana.example.com`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=production"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    restart: unless-stopped
    networks:
      - traefik

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
      - '--collector.textfile.directory=/var/lib/node_exporter'
    network_mode: host
    pid: host
    volumes:
      - '/:/host:ro,rslave'
      - '/var/lib/node_exporter:/var/lib/node_exporter'
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.52.1
    container_name: cadvisor
    command:
      - "--docker_only=true"
      - "--housekeeping_interval=10s"
      - "--allow_dynamic_housekeeping=false"
      - "--global_housekeeping_interval=1m0s"
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    networks:
      - traefik

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    command:
      - "--config.file=/etc/alertmanager/alertmanager.yml"
    volumes:
      - ./config/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    restart: unless-stopped
    networks:
      - traefik

  prometheus-msteams:
    image: quay.io/prometheusmsteams/prometheus-msteams
    container_name: prometheus-msteams
    environment:
      - TEAMS_INCOMING_WEBHOOK_URL=${TEAMS_WEBHOOK_URL}
      - TEAMS_REQUEST_URI=alertmanager
    restart: unless-stopped
    networks:
      - traefik

  blackbox:
    image: prom/blackbox-exporter:latest
    container_name: blackbox-exporter
    command:
      - "--config.file=/config/blackbox.yml"
    volumes:
      - ./config/blackbox:/config
    restart: unless-stopped
    networks:
      - traefik

  speedtest-exporter:
    image: miguelndecarvalho/speedtest-exporter:latest
    container_name: speedtest-exporter
    healthcheck:
      disable: true
    restart: unless-stopped
    networks:
      - traefik

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.4.1
    container_name: nginx-exporter
    command:
      - "-nginx.scrape-uri=http://server-ip/nginx_status"
    network_mode: host
    restart: unless-stopped

  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/loki_config.yml
    volumes:
      - ./config/loki:/etc/loki
      - loki-data:/loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    networks:
      - traefik

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    volumes:
      - ./config/alloy/alloy.config:/etc/alloy/config.alloy
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/log/docker:/var/log/docker:ro
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    networks:
      - traefik

  mysqld_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld_exporter
    network_mode: host
    volumes:
      - ./config/mysql/exporter_my.cnf:/.my.cnf
    restart: unless-stopped

  postgres_exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres_exporter
    network_mode: host
    environment:
      - DATA_SOURCE_URI=localhost:5432/postgres?sslmode=disable
      - DATA_SOURCE_USER=exporter
      - DATA_SOURCE_PASS=${POSTGRES_EXPORTER_PASSWORD}
    restart: unless-stopped

  elasticsearch-exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    container_name: elasticsearch-exporter
    command:
      - "--es.uri=http://elasticsearch:9200"
      - "--es.timeout=120s"
    restart: unless-stopped
    networks:
      - traefik

volumes:
  grafana-data:
  prometheus-data:
  loki-data:

networks:
  traefik:
    external: true
